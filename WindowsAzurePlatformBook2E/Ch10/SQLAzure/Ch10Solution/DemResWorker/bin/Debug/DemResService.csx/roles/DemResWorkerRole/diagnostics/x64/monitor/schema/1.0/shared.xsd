<?xml version="1.0"?>
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <xs:include schemaLocation="query.xsd"/>

  <!-- TODO: add restriction so that the name cannot start with MA -->
  <xs:simpleType name="MonNameType">
    <xs:restriction base="xs:string">
      <xs:pattern value="([^Mm].*)|([Mm][^Dd].*)|([Mm][Dd][^Ss].*)" />
    </xs:restriction>
  </xs:simpleType>

  <!--
  From MSDN
  The queue name must be a valid DNS name, conforming to the following naming rules:
  1.A queue name must start with a letter or number, and may contain only letters, numbers and the dash (-) character.
  2.The first and last letters in the queue name must be alphanumeric. The dash (-) character may not be the first or last letter.
  3.All letters in a queue name must be lowercase.
  4.A queue name must be from 3 through 63 characters long.
  -->
  <xs:simpleType name="XstoreQueueNameType">
    <xs:restriction base="xs:string">
      <xs:pattern value="[a-z0-9][a-z0-9\-]{1,61}[a-z0-9]" />
    </xs:restriction>
  </xs:simpleType>

  <!--
  From MSDN
  1. Table names may contain only alphanumeric characters.
  2. A table name may not begin with a numeric character.
  3. Table names are case-insensitive.
  4. Table names must be from 3 through 63 characters long.
  -->
  <xs:simpleType name="XstoreTableNameType">
    <xs:restriction base="xs:string">
      <xs:pattern value="[a-zA-Z][a-zA-Z0-9]{2,62}" />
    </xs:restriction>
  </xs:simpleType>

  <!-- we enforce the same restriction as xtable for all our tables
       the difference between this type and XstoreTableNameType is that
       this one derives from xs:ID
  -->
  <xs:simpleType name="MonTableNameType">
    <xs:restriction base="MonIDType">
      <xs:pattern value="[a-zA-Z][a-zA-Z0-9]{2,62}" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="PriorityType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Normal"/>
      <xs:enumeration value="Low"/>
      <xs:enumeration value="High"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="MonTypeType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="mt:int8"/>
      <xs:enumeration value="mt:int16"/>
      <xs:enumeration value="mt:int32"/>
      <xs:enumeration value="mt:int64"/>
      <xs:enumeration value="mt:uint8"/>
      <xs:enumeration value="mt:uint16"/>
      <xs:enumeration value="mt:uint32"/>
      <xs:enumeration value="mt:uint64"/>
      <xs:enumeration value="mt:bool"/>
      <xs:enumeration value="mt:char"/>
      <xs:enumeration value="mt:wchar"/>
      <xs:enumeration value="mt:float32"/>
      <xs:enumeration value="mt:float64"/>
      <xs:enumeration value="mt:utc"/>
      <xs:enumeration value="mt:cstr"/>
      <xs:enumeration value="mt:wstr"/>
      <xs:enumeration value="mt:blob"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- The time stamp policy refers to the query time.  For example if you specify
       IntervalStartTime, that means the time stamp of the row(s) returned to the
       task's data site will have the start time of the query.  If you use
       PreserveRowTime, the time stamp of each row returned is the same time stamp
       the query returns for each row. -->
  <xs:simpleType name="MonTimestampPolicyType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="IntervalStartTime"/>
      <xs:enumeration value="IntervalEndTime"/>
      <xs:enumeration value="PreserveRowTime"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="ColumnType">
    <xs:attribute name="name" type="ValidColumnNameType" use="required" />
    <xs:attribute name="type" type="MonTypeType" use="required" />
  </xs:complexType>

  <xs:complexType name="SchemaType">
    <xs:sequence>
      <xs:element name="Column" type="ColumnType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="name" type="MonIDType" use="required" />
  </xs:complexType>

  <xs:complexType name="SchemasType">
    <xs:sequence>
      <xs:element name="Schema" type="SchemaType" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="TableDeclarationType">
    <xs:attribute name="name" type="MonTableNameType" use="required" />
    <xs:attribute name="schema" type="xs:IDREF" use="required" />
  </xs:complexType>

  <xs:complexType name="TableDeclarationsType">
    <xs:sequence>
      <xs:element name="Table" type="TableDeclarationType" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="MetaDataType" mixed="true">
    <xs:sequence>
      <xs:any processContents="skip" minOccurs="0"/>
    </xs:sequence>
    <xs:anyAttribute processContents="skip"/>
  </xs:complexType>

  <xs:complexType name="TableType">
    <xs:complexContent>
      <xs:extension base="TableDeclarationType">
        <xs:sequence>
          <xs:element name="MetaData" type="MetaDataType" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="priority" type="PriorityType" use="required" />
        <xs:attribute name="retentionInSeconds" type="xs:positiveInteger" use="optional" />
        <xs:attribute name="diskQuotaInMB" type="xs:positiveInteger" use="optional" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="TablesType">
    <xs:sequence>
      <xs:element name="Table" type="TableType" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="DestinationTableType">
    <xs:attribute name="name" type="xs:IDREF" use="required"/>
    <xs:attribute name="dataSite" type="xs:IDREF" use="optional"/>
  </xs:complexType>

  <xs:simpleType name="DurationType">
    <xs:restriction base="xs:string">
      <!-- This duration type is an extension of the xs:duration type to allow positive
           floating number -->
      <xs:pattern value="P((((([0-9])+\.){0,1}([0-9])+Y){1}((([0-9])+\.){0,1}([0-9])+M){0,1}((([0-9])+\.){0,1}([0-9])+D){0,1})|(((([0-9])+\.){0,1}([0-9])+Y){0,1}((([0-9])+\.){0,1}([0-9])+M){1}((([0-9])+\.){0,1}([0-9])+D){0,1})|(((([0-9])+\.){0,1}([0-9])+Y){0,1}((([0-9])+\.){0,1}([0-9])+M){0,1}((([0-9])+\.){0,1}([0-9])+D){1}))|PT((((([0-9])+\.){0,1}([0-9])+H){1}((([0-9])+\.){0,1}([0-9])+M){0,1}((([0-9])+\.){0,1}([0-9])+S){0,1})|(((([0-9])+\.){0,1}([0-9])+H){0,1}((([0-9])+\.){0,1}([0-9])+M){1}((([0-9])+\.){0,1}([0-9])+S){0,1})|(((([0-9])+\.){0,1}([0-9])+H){0,1}((([0-9])+\.){0,1}([0-9])+M){0,1}((([0-9])+\.){0,1}([0-9])+S){1}))|P(((((([0-9])+\.){0,1}([0-9])+Y){1}((([0-9])+\.){0,1}([0-9])+M){0,1}((([0-9])+\.){0,1}([0-9])+D){0,1})|(((([0-9])+\.){0,1}([0-9])+Y){0,1}((([0-9])+\.){0,1}([0-9])+M){1}((([0-9])+\.){0,1}([0-9])+D){0,1})|(((([0-9])+\.){0,1}([0-9])+Y){0,1}((([0-9])+\.){0,1}([0-9])+M){0,1}((([0-9])+\.){0,1}([0-9])+D){1}))T((((([0-9])+\.){0,1}([0-9])+H){1}((([0-9])+\.){0,1}([0-9])+M){0,1}((([0-9])+\.){0,1}([0-9])+S){0,1})|(((([0-9])+\.){0,1}([0-9])+H){0,1}((([0-9])+\.){0,1}([0-9])+M){1}((([0-9])+\.){0,1}([0-9])+S){0,1})|(((([0-9])+\.){0,1}([0-9])+H){0,1}((([0-9])+\.){0,1}([0-9])+M){0,1}((([0-9])+\.){0,1}([0-9])+S){1})))" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="DateTimeType">
    <xs:restriction base="xs:dateTime">
      <!-- enforce the time to be in UTC -->
      <xs:pattern value=".*Z" />
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="NotificationQueueActionType">
    <xs:sequence>
      <xs:element name="Message" type="xs:string" minOccurs="1" maxOccurs="1" />
      <xs:element name="QueueDataSite" type="xs:IDREF" minOccurs="1" maxOccurs="1"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="PostTaskActionsType">
    <xs:sequence>
      <xs:element name="NotificationQueueAction" type="NotificationQueueActionType" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ScheduledTaskType">
    <xs:all>
      <xs:element name="Description" type="xs:string"/>
      <xs:element name="DestinationTable" type="DestinationTableType"/>
      <xs:element name="PostTaskActions" type="PostTaskActionsType" minOccurs="0" maxOccurs="1" />
    </xs:all>
    <xs:attribute name="priority" type="PriorityType" use="required" />
    <xs:attribute name="repeat" type="xs:int" use="optional"/>
    <xs:attribute name="startTime" type="DateTimeType" use="optional"/>
    <xs:attribute name="endTime" type="DateTimeType" use="optional"/>
    <xs:attribute name="duration" type="DurationType" use="required"/>
    <xs:attribute name="offset" type="xs:duration" use="optional"/>
    <xs:attribute name="query" type="xs:IDREF" use="required"/>
    <xs:attribute name="queryDelay" type="xs:duration" use="optional"/>
    <xs:attribute name="timestampPolicy" type="MonTimestampPolicyType" use="required" />
    <xs:attribute name="retryTimeout" type="DurationType" use="optional" default="PT1H" />
  </xs:complexType>

  <xs:complexType name="ScheduledTasksType">
    <xs:sequence>
      <xs:element name="ScheduledTask" type="ScheduledTaskType" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="QueriesType">
    <xs:sequence>
      <xs:element name="Query" type="QueryType" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="RootElementType">
    <xs:sequence>
      <xs:element name="Schemas" type="SchemasType" minOccurs="0"/>
      <xs:element name="TableDeclarations" type="TableDeclarationsType" minOccurs="0"/>
      <xs:element name="Queries" type="QueriesType" minOccurs="0"/>
      <xs:element name="ScheduledTasks" type="ScheduledTasksType" minOccurs="0"/>
      <xs:element name="MdsConfigServers" type="MdsConfigServers" minOccurs="0" maxOccurs="1" />
      <xs:element name="XstoreAccountInfos" type="XstoreAccountInfosType" minOccurs="0"/>
      <xs:element name="DataSites" type="DataSitesType" minOccurs="0"/>
      <xs:element name="AuthorizationPolicy" type="AuthorizationPolicyType" minOccurs="0" />
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ColumnAssignmentType">
    <xs:attribute name="name" type="xs:string" use="required" />
    <xs:attribute name="value" type="xs:string" use="required" />
    <xs:attribute name="defaultAssignment" type="xs:string" use="optional" />
    <xs:attribute name="type" type="MonTypeType" use="required" />
  </xs:complexType>

  <xs:complexType name="TableAssignmentType">
    <xs:sequence>
      <xs:element name="Column" type="ColumnAssignmentType" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="name" type="xs:ID" use="required" />
    <xs:attribute name="table" type="xs:IDREF" use="required" />
  </xs:complexType>

  <xs:complexType name="TableAssignmentsType">
    <xs:sequence>
      <xs:element name="TableAssignment" type="TableAssignmentType" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="PerformanceCounterType">
    <xs:attribute name="counter" type="xs:string" use="required" />
    <xs:attribute name="sampleRate" type="xs:int" use="required" />
    <xs:attribute name="tableAssignment" type="xs:IDREF" use="required" />
  </xs:complexType>

  <xs:complexType name="EventType">
    <xs:attribute name="id" type="xs:int" use="required"/>
    <xs:attribute name="tableAssignment" type="xs:IDREF" use="required"/>
  </xs:complexType>

  <xs:complexType name="ETWProviderType">
    <xs:sequence>
      <xs:element name="Event" type="EventType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="guid" type="xs:string" use="required" />
    <xs:attribute name="format" type="xs:string" use="required" />
    <xs:attribute name="defaultTableAssignment" type="xs:string" use="optional" />
    <!-- This option could be dangerous. Once it's set to true, MA could write a event to multiple table that matches the schema.
         The config file writer has to specifically turn on this feature to confirm he/she understands the consequence.
    -->
    <xs:attribute name="allowDuplicateEventID" type="xs:boolean" use="optional" />
  </xs:complexType>

  <xs:complexType name="SystemEventsSubscriptionType">
    <xs:attribute name="eventQuery" type="xs:string" use="required" />
    <xs:attribute name="tableAssignment" type="xs:IDREF" use="required"/>
  </xs:complexType>


  <xs:complexType name="FileListenerWatchItemType">
    <xs:sequence>
      <xs:element name="Directory" type="xs:string" minOccurs="1" maxOccurs="1" />
    </xs:sequence>  
    <xs:attribute name="filter" type="xs:string" use="optional" />
    <xs:attribute name="lastChangeOffsetInSeconds" type="xs:int" use="optional" default="0"/>
    <xs:attribute name="startTime" type="DateTimeType" use="optional" />
    <xs:attribute name="endTime" type="xs:string" use="optional" />    
    <xs:attribute name="contextParam" type="xs:string" use="optional" />
    <xs:attribute name="tableAssignment" type="xs:IDREF" use="required" />
    <xs:attribute name="diskQuota" type="xs:int" use="optional" />
  </xs:complexType>

  <xs:complexType name="ListenerType">
    <xs:choice>
      <xs:element name="PerformanceCounter" type="PerformanceCounterType" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="ETWProvider" type="ETWProviderType" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="SystemEventsSubscription" type="SystemEventsSubscriptionType" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="FileListenerWatchItem" type="FileListenerWatchItemType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:choice>
    <xs:attribute name="module" type="xs:string" use="required" />
    <xs:attribute name="priority" type="PriorityType" use="required" />
  </xs:complexType>

  <xs:complexType name="ListenersType">
    <xs:sequence>
      <xs:element name="Listener" type="ListenerType" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ResourceUsageType">
    <xs:attribute name="diskQuotaInMB" type="xs:int" use="required"/>
    <xs:attribute name="networkQuotaInKbps" type="xs:int" use="optional"/>
    <xs:attribute name="cpuPercentUsage" type="xs:int" use="optional"/>
  </xs:complexType>

<!-- If the certificateStore attribute is present the accountSharedKey is encrypted.  If it is not present
     the key is in plain text.  See CertOpenSystemStore in MSDN for more details.  -->
  <xs:complexType name="XstoreAccountInfoType">
    <xs:attribute name="name" type="xs:ID" use="required" />
    <xs:attribute name="usePathStyleUris" type="xs:boolean" use="required" />
    <xs:attribute name="accountName" type="xs:string" use="required"/>
    <xs:attribute name="accountSharedKey" type="xs:string" use="required"/>
    <xs:attribute name="tableUri" type="xs:string" use="required"/>
    <xs:attribute name="queueUri" type="xs:string" use="required"/>
    <xs:attribute name="blobUri" type="xs:string" use="required"/>
    <xs:attribute name="certificateStore" type="xs:string" use="optional"/>
  </xs:complexType>

  <xs:complexType name="XstoreAccountInfosType">
    <xs:sequence>
      <xs:element name="XstoreAccountInfo" type="XstoreAccountInfoType" minOccurs="1" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="XstoreDataSiteBaseType">
    <xs:attribute name="name" type="xs:ID" use="required" />
    <xs:attribute name="xstoreAccountInfoName" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="XstoreQueueDataSiteType">
    <xs:complexContent>
      <xs:extension base="XstoreDataSiteBaseType">
        <xs:attribute name="queueName" type="XstoreQueueNameType" use="required"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XstoreTableDataSiteType">
    <xs:complexContent>
      <xs:extension base="XstoreDataSiteBaseType">
        <xs:attribute name="associatedBlobDataSite" type="xs:IDREF" use="optional"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XstoreBlobDataSiteType">
    <xs:complexContent>
      <xs:extension base="XstoreDataSiteBaseType">
        <xs:attribute name="containerName" type="XstoreQueueNameType" use="required"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="DataSitesType">
    <xs:choice maxOccurs="unbounded">
      <xs:element name="QueueDataSite" type="XstoreQueueDataSiteType" minOccurs="1" maxOccurs="1" />
      <xs:element name="TableDataSite" type="XstoreTableDataSiteType" minOccurs="1" maxOccurs="1" />
      <xs:element name="BlobDataSite" type="XstoreBlobDataSiteType" minOccurs="0" maxOccurs="1" />
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="MonitoringAgentConfig">
    <xs:complexContent>
      <xs:extension base="RootElementType">
        <xs:sequence>
          <xs:element name="ResourceUsage" type="ResourceUsageType" />
          <xs:element name="Tables" type="TablesType" minOccurs="0" />
          <xs:element name="TableAssignments" type="TableAssignmentsType" minOccurs="0" />
          <xs:element name="Listeners" type="ListenersType" minOccurs="0" />
        </xs:sequence>
        <xs:attribute name="version" type="xs:string" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:simpleType name="MdsClusterTypeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="prod"/>
      <xs:enumeration value="stage"/>
      <xs:enumeration value="int"/>
      <xs:enumeration value="test"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="MdsConfigServerType">
    <xs:attribute name="url" type="xs:string" use="required" />
    <xs:attribute name="clusterType" type="MdsClusterTypeEnum" use="required" />
    <xs:attribute name="ipRange" type="xs:string" />
  </xs:complexType>

  <xs:complexType name="MdsConfigServers">
    <xs:sequence>
      <xs:element name="MdsConfigServer" type="MdsConfigServerType" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="XTableSettingType">
    <xs:sequence>
      <xs:element name="ToXTableMapping" type="SelectColumnsType" />
      <xs:element name="FromXTableMapping" type="SelectColumnsType" />
    </xs:sequence>
    <xs:attribute name="schema" type="xs:string" use="required"/>
    <xs:attribute name="xstoreAccountInfoName" type="xs:string" use="required" />
    <xs:attribute name="partitionKeyLoadSpreadIndexMax" type="xs:int" use="optional" />
  </xs:complexType>

  <xs:complexType name="XstoreTableType">
    <xs:complexContent>
      <xs:extension base="TableType">
        <xs:sequence>
          <xs:element name="XTableSetting" type="XTableSettingType"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="MdsTablesType">
    <xs:sequence maxOccurs="unbounded">
      <xs:choice>
        <xs:element name="XstoreTable" type="XstoreTableType" maxOccurs="unbounded"/>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="MdsConfig">
    <xs:complexContent>
      <xs:extension base="RootElementType">
        <xs:sequence>
          <xs:element name="Tables" type="MdsTablesType" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="version" type="xs:string" use="optional"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="FakeConfigType">
    <xs:sequence>
      <xs:element name="Ma" type="MonitoringAgentConfig"/>
      <xs:element name ="Mds" type ="MdsConfig"/>
    </xs:sequence>
  </xs:complexType>

  <xs:element name="FakeConfig" type ="FakeConfigType"/>

  <xs:complexType name="AuthorizationPolicyType">
    <xs:sequence>
      <xs:element name="UserRole" type="UserRoleType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="UserRoleType">
    <xs:sequence>
      <xs:element name="Accounts" type="AccountsType" minOccurs="0"/>
      <xs:element name="Claims" type="ClaimsType" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="Name" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="AccountsType">
    <xs:sequence>
      <xs:element name="Account" type="AccountType" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="AccountType">
    <xs:attribute name="Name" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="ClaimsType">
    <xs:sequence>
      <xs:element name="Claim" type="ClaimType" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ClaimType">
    <xs:attribute name="Kind" type="ClaimKindType"/>
    <xs:attribute name="Resource" type="xs:string"/>
    <xs:attribute name="Right" type="ClaimRightType"/>
  </xs:complexType>

  <xs:simpleType name="ClaimKindType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Operation"/>
      <xs:enumeration value="Table"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="ClaimRightType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Execute"/>
      <xs:enumeration value="Create"/>
      <xs:enumeration value="Read"/>
      <xs:enumeration value="Update"/>
      <xs:enumeration value="Delete"/>
    </xs:restriction>
  </xs:simpleType>


</xs:schema>
